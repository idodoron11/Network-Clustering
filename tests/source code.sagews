︠992b1c72-4134-4779-bd17-5837ffb21913s︠

︡cb4f2bd3-54e0-4d7f-80c4-e3efa44b307f︡{"done":true}
︠b3681362-6693-4d74-a9da-4389854c33c3s︠
M = [[0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[
0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[
1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[
0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[
1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[
0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[
0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[
0,0,0,0,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0],[
0,0,0,0,0,0,0,1,0,0,1,1,0,1,0,0,1,0,0,0],[
0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0],[
0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,0,0],[
0,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0],[
0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0],[
0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0],[
0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0],[
0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1],[
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1],[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1],[
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0],[
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0]]

E = []
for i in range(20):
    for j in range(20):
        if i <= j and M[i][j] == 1:
            E.append((i,j))

G = Graph(E)
P = G.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G.edges(False, True)))

adjmat = str(G.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡c5acc9f2-3139-4399-9b26-5057cd78434b︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_oKPHTV.svg","show":true,"text":null,"uuid":"ba4af059-7748-4795-b5a8-3c4cb4a01742"},"once":false}︡{"stdout":"{{0,2},{0,4},{1,2},{1,3},{1,4},{2,4},{2,5},{2,6},{3,4},{3,5},{3,6},{3,11},{4,5},{4,6},{4,7},{5,15},{7,8},{7,10},{7,11},{7,12},{8,10},{8,11},{8,13},{8,16},{9,10},{9,12},{9,13},{10,11},{10,12},{10,14},{12,14},{13,14},{13,18},{15,16},{15,17},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19}}\n"}︡{"stdout":"385\n"}︡{"stdout":"\n20\n20\n0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 1 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0\n1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 1 0 0 0\n0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 0 0\n0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0\n0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0\n"}︡{"done":true}
︠c52b4b69-d3d2-4dc0-aa69-88a03c48f259s︠
G1 = graphs.CompleteGraph(5)
G2 = graphs.CompleteGraph(6)
G3 = graphs.CompleteGraph(9)
G1 = G1.disjoint_union(G2, labels='integers')
G1 = G1.disjoint_union(G3, labels='integers')
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡47cf38cd-6440-42f5-a658-5ee5e071099a︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_S1VG8D.svg","show":true,"text":null,"uuid":"ebd7f735-6691-402f-ab43-a10f0abb77c3"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{1,2},{1,3},{1,4},{2,3},{2,4},{3,4},{5,6},{5,7},{5,8},{5,9},{5,10},{6,7},{6,8},{6,9},{6,10},{7,8},{7,9},{7,10},{8,9},{8,10},{9,10},{11,12},{11,13},{11,14},{11,15},{11,16},{11,17},{11,18},{11,19},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,19},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{14,15},{14,16},{14,17},{14,18},{14,19},{15,16},{15,17},{15,18},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19},{18,19}}\n"}︡{"stdout":"582\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0\n"}︡{"done":true}
︠6aab6181-5bad-4152-a8a4-ba70502ab1b9s︠
G1 = graphs.CompleteGraph(5)
G2 = graphs.CompleteGraph(6)
G3 = graphs.CompleteGraph(10)
G1 = G1.disjoint_union(G2, labels='integers')
G1 = G1.disjoint_union(G3, labels='integers')
G1.add_edges([(6,16),(7,18), (4,9), (0,10)])
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡f7e13495-613a-4279-ab7e-bd3a293b5668︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_Wt6Uor.svg","show":true,"text":null,"uuid":"93163a6f-9a32-49f0-bb74-38f35ca936dd"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{0,10},{1,2},{1,3},{1,4},{2,3},{2,4},{3,4},{4,9},{5,6},{5,7},{5,8},{5,9},{5,10},{6,7},{6,8},{6,9},{6,10},{6,16},{7,8},{7,9},{7,10},{7,18},{8,9},{8,10},{9,10},{11,12},{11,13},{11,14},{11,15},{11,16},{11,17},{11,18},{11,19},{11,20},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,19},{12,20},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{13,20},{14,15},{14,16},{14,17},{14,18},{14,19},{14,20},{15,16},{15,17},{15,18},{15,19},{15,20},{16,17},{16,18},{16,19},{16,20},{17,18},{17,19},{17,20},{18,19},{18,20},{19,20}}\n"}︡{"stdout":"707\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0\n0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0\n1 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1\n0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1\n0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 0 1 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 1\n0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0\n"}︡{"done":true}
︠2bb1113a-6b72-4288-bf6a-bf603770e8a2s︠
G1 = graphs.CompleteGraph(5)
G2 = graphs.CompleteGraph(15)
G1 = G1.disjoint_union(G2, labels='integers')
G1.add_edges([(1,16),(2,18), (4,9), (0,10)])
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡09aa488f-a453-44b0-aad3-ef889edaee46︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_u0tMDM.svg","show":true,"text":null,"uuid":"f581592d-cf7a-444e-9d36-fef283861da0"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{0,10},{1,2},{1,3},{1,4},{1,16},{2,3},{2,4},{2,18},{3,4},{4,9},{5,6},{5,7},{5,8},{5,9},{5,10},{5,11},{5,12},{5,13},{5,14},{5,15},{5,16},{5,17},{5,18},{5,19},{6,7},{6,8},{6,9},{6,10},{6,11},{6,12},{6,13},{6,14},{6,15},{6,16},{6,17},{6,18},{6,19},{7,8},{7,9},{7,10},{7,11},{7,12},{7,13},{7,14},{7,15},{7,16},{7,17},{7,18},{7,19},{8,9},{8,10},{8,11},{8,12},{8,13},{8,14},{8,15},{8,16},{8,17},{8,18},{8,19},{9,10},{9,11},{9,12},{9,13},{9,14},{9,15},{9,16},{9,17},{9,18},{9,19},{10,11},{10,12},{10,13},{10,14},{10,15},{10,16},{10,17},{10,18},{10,19},{11,12},{11,13},{11,14},{11,15},{11,16},{11,17},{11,18},{11,19},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,19},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{14,15},{14,16},{14,17},{14,18},{14,19},{15,16},{15,17},{15,18},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19},{18,19}}\n"}︡{"stdout":"1112\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\n1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1\n0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\n0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1\n0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1\n0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n"}︡{"done":true}
︠90122cee-b7b0-4ed9-8d1a-ad2ecea5546as︠
G1 = graphs.CompleteGraph(7)
G2 = graphs.CompleteGraph(13)
G1 = G1.disjoint_union(G2, labels='integers')
G1.add_edges([(1,16),(2,18), (4,9), (0,10)])
G1.delete_edges([(8,19), (7,13), (1,3)])
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡f686fadb-529a-4216-aa3a-b2d2ad2d15a0︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_uhQ65r.svg","show":true,"text":null,"uuid":"83a8687f-047a-436b-a8d2-2eac793c1f14"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{0,5},{0,6},{0,10},{1,2},{1,4},{1,5},{1,6},{1,16},{2,3},{2,4},{2,5},{2,6},{2,18},{3,4},{3,5},{3,6},{4,5},{4,6},{4,9},{5,6},{7,8},{7,9},{7,10},{7,11},{7,12},{7,14},{7,15},{7,16},{7,17},{7,18},{7,19},{8,9},{8,10},{8,11},{8,12},{8,13},{8,14},{8,15},{8,16},{8,17},{8,18},{9,10},{9,11},{9,12},{9,13},{9,14},{9,15},{9,16},{9,17},{9,18},{9,19},{10,11},{10,12},{10,13},{10,14},{10,15},{10,16},{10,17},{10,18},{10,19},{11,12},{11,13},{11,14},{11,15},{11,16},{11,17},{11,18},{11,19},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,19},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{14,15},{14,16},{14,17},{14,18},{14,19},{15,16},{15,17},{15,18},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19},{18,19}}\n"}︡{"stdout":"938\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0\n1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0\n1 1 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0\n1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1\n0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0\n0 0 0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1\n0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 1\n0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1\n0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1\n0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1\n0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1\n0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 0\n"}︡{"done":true}
︠55f36e28-c5cb-46d4-a07f-af593a56ea61s︠
G1 = Graph()
for i in range(20):
    G1.add_vertices([i])
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡eeb88daf-fe9e-4823-bd21-b415c6ca52ee︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_kw516I.svg","show":true,"text":null,"uuid":"5849cca7-66df-4259-9a63-00e29508a671"},"once":false}︡{"stdout":"{}\n"}︡{"stdout":"19\n"}︡{"stdout":"\n20\n20\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"}︡{"done":true}
︠769f711d-8bd9-4bd0-93b7-ec263cff3072s︠
G1 = graphs.CompleteGraph(20)
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡fc3d4f63-8644-47d0-99d7-c9880736b1b4︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_z2H5av.svg","show":true,"text":null,"uuid":"6e9ca480-2bf6-4d46-b138-1d1be9f5720e"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{0,5},{0,6},{0,7},{0,8},{0,9},{0,10},{0,11},{0,12},{0,13},{0,14},{0,15},{0,16},{0,17},{0,18},{0,19},{1,2},{1,3},{1,4},{1,5},{1,6},{1,7},{1,8},{1,9},{1,10},{1,11},{1,12},{1,13},{1,14},{1,15},{1,16},{1,17},{1,18},{1,19},{2,3},{2,4},{2,5},{2,6},{2,7},{2,8},{2,9},{2,10},{2,11},{2,12},{2,13},{2,14},{2,15},{2,16},{2,17},{2,18},{2,19},{3,4},{3,5},{3,6},{3,7},{3,8},{3,9},{3,10},{3,11},{3,12},{3,13},{3,14},{3,15},{3,16},{3,17},{3,18},{3,19},{4,5},{4,6},{4,7},{4,8},{4,9},{4,10},{4,11},{4,12},{4,13},{4,14},{4,15},{4,16},{4,17},{4,18},{4,19},{5,6},{5,7},{5,8},{5,9},{5,10},{5,11},{5,12},{5,13},{5,14},{5,15},{5,16},{5,17},{5,18},{5,19},{6,7},{6,8},{6,9},{6,10},{6,11},{6,12},{6,13},{6,14},{6,15},{6,16},{6,17},{6,18},{6,19},{7,8},{7,9},{7,10},{7,11},{7,12},{7,13},{7,14},{7,15},{7,16},{7,17},{7,18},{7,19},{8,9},{8,10},{8,11},{8,12},{8,13},{8,14},{8,15},{8,16},{8,17},{8,18},{8,19},{9,10},{9,11},{9,12},{9,13},{9,14},{9,15},{9,16},{9,17},{9,18},{9,19},{10,11},{10,12},{10,13},{10,14},{10,15},{10,16},{10,17},{10,18},{10,19},{11,12},{11,13},{11,14},{11,15},{11,16},{11,17},{11,18},{11,19},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,19},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{14,15},{14,16},{14,17},{14,18},{14,19},{15,16},{15,17},{15,18},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19},{18,19}}\n"}︡{"stdout":"1727\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n"}︡{"done":true}
︠11bf2318-9109-4029-991c-4d0d34022a6fs︠
G1 = graphs.PathGraph(10)
G2 = graphs.PathGraph(10)
G1 = G1.disjoint_union(G2, labels='integers')
G1.add_edges([(2,19), (4,9), (0,10)])
P= G1.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G1.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G1.edges(False, True)))

adjmat = str(G1.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)
︡47935be9-c7ec-4922-a68f-8fd406dfd7d4︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_LwdddN.svg","show":true,"text":null,"uuid":"86e3645c-20c3-4327-b989-e77f216eac08"},"once":false}︡{"stdout":"{{0,1},{0,10},{1,2},{2,3},{2,19},{3,4},{4,5},{4,9},{5,6},{6,7},{7,8},{8,9},{10,11},{11,12},{12,13},{13,14},{14,15},{15,16},{16,17},{17,18},{18,19}}\n"}︡{"stdout":"205\n"}︡{"stdout":"\n20\n20\n0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\n1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\n"}︡{"done":true}
︠8ab8c195-03c0-4358-b7ef-3b74c8e235a2s︠
M = [[0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,0.0 ,1.0 ,0.0 ],
[1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,1.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,1.0 ,0.0 ,1.0 ,1.0 ,1.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,0.0 ,1.0 ,1.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,0.0 ,1.0 ],
[0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,0.0 ,0.0 ,0.0 ,0.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.0 ]]

E = []
for i in range(20):
    for j in range(20):
        if i < j and M[i][j] == 1:
            E.append((i,j))

G = Graph(E)
P = G.plot()
P.show()
s = "{"
delimiter = ""
for (i,j) in G.edges(False, True):
    s += delimiter + "{" + str(i) + "," + str(j) + "}"
    delimiter = ","
s += "}"
print(str(s))
len("number of edges: " + str(G.edges(False, True)))

adjmat = str(G.adjacency_matrix())
adjmat = adjmat.replace('[', '')
adjmat = adjmat.replace(']', '')
print("\n20\n20\n" + adjmat)

︡f6104850-ca43-4079-852f-f3e63b6f8c60︡{"file":{"filename":"/home/user/.sage/temp/project-a97a4a7e-aa81-43db-9eb1-193ecc8b63ef/444/tmp_DD5SDp.svg","show":true,"text":null,"uuid":"d1806392-81dd-40ac-bfb2-1c219568df37"},"once":false}︡{"stdout":"{{0,1},{0,2},{0,3},{0,4},{0,8},{1,2},{1,3},{1,9},{2,3},{2,4},{2,7},{2,12},{3,4},{3,14},{4,16},{5,6},{5,7},{5,8},{5,10},{5,11},{5,12},{5,13},{6,7},{6,8},{6,9},{6,10},{6,11},{6,12},{6,13},{6,14},{7,8},{7,9},{7,10},{7,11},{7,12},{7,13},{7,14},{7,16},{7,18},{8,9},{8,10},{8,11},{8,12},{8,13},{8,14},{9,10},{9,11},{9,12},{9,13},{9,14},{9,17},{10,11},{10,12},{10,13},{10,14},{10,17},{10,19},{11,12},{11,13},{11,14},{12,13},{12,14},{12,16},{13,14},{13,15},{15,16},{15,17},{15,18},{15,19},{16,17},{16,18},{16,19},{17,18},{17,19},{18,19}}\n"}︡{"stdout":"695\n"}︡{"stdout":"\n20\n20\n0 1 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\n1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\n1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0\n1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\n1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\n0 0 0 0 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0\n0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0\n0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 0 1 0 1 0\n1 0 0 0 0 1 1 1 0 1 1 1 1 1 1 0 0 0 0 0\n0 1 0 0 0 0 1 1 1 0 1 1 1 1 1 0 0 1 0 0\n0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1\n0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0\n0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0\n0 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0\n0 0 0 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1\n0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 1 1\n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 1 1\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 1\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 0\n"}︡{"done":true}









